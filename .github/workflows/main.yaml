# This workflow will build and test the golang project

name: SmartStore-ecommerce-test

on:
  push:
    branches:  
    - "main" 
  pull_request:
    

jobs:

  build:
    name: Build and Test, and Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Setup action
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Install dependencies
      run: |
        go mod download
        go mod tidy
        go mod verify    

    - name: Build
      run: go build -v ./...

    - name: Unit Tests
      run: go test -v ./... -cover

    - name: Deploy to AWS EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{secrets.EC2_PUBLIC_IP}}
        username: ubuntu
        key: ${{secrets.EC2_SSH_KEY}}
        script: |
          echo "Connected to smartstore AWS EC2 instance"
          cd go/src/esmartstore.shop/go-ecommerce-gin-clean-arch
          git pull          
          go build -o ./ ./cmd/api
          sudo systemctl restart goweb.service
        
       
        #  go build cmd/api/main.go   #./: The ./ is a shorthand notation for the current working directory, which means it refers to the root directory of your project.
        
        #commented script is to create build file locally and then pushed and run that build file only, which is a good approach, but since i previously followed pulling the complete code to the ec2 instance from git, i am following the second approach, which is given in the previous script
        # script: |
        #   echo "Connected to AWS EC2 instance"
        #   scp -r build/bin ubuntu@${{secrets.EC2_PUBLIC_IP}}:/path/to/destination
        #   ssh ubuntu@${{secrets.EC2_PUBLIC_IP}} "sudo systemctl restart myapp.service"

        
