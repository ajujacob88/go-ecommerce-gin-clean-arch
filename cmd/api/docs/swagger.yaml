definitions:
  domain.Users:
    type: object
  model.AdminLoginInfo:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.BlockUser:
    properties:
      reason:
        type: string
      user_id:
        type: integer
    type: object
  model.NewAdminInfo:
    properties:
      email:
        description: Email    string `json:"email" validate:"required,email"`
        type: string
      password:
        type: string
      phone:
        maxLength: 10
        minLength: 10
        type: string
      user_name:
        type: string
    required:
    - email
    - password
    - phone
    - user_name
    type: object
  model.NewCategory:
    properties:
      category_name:
        type: string
    type: object
  req.UserLoginEmail:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  res.Response:
    properties:
      data: {}
      errors: {}
      message:
        type: string
      status_code:
        type: integer
    type: object
host: localhost:3000
info:
  contact: {}
  description: Ecommerce REST API built using Go, PSQL, REST API following Clean Architecture.
  title: Ecommerce REST API
  version: "1.0"
paths:
  /admin/admins:
    post:
      consumes:
      - application/json
      description: Super admin can create a new admin from admin panel
      operationId: create-admin
      parameters:
      - description: New Admin Details
        in: body
        name: admin_details
        required: true
        schema:
          $ref: '#/definitions/model.NewAdminInfo'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
      summary: Create a new admin from admin panel
      tags:
      - Admin
  /admin/categories:
    post:
      consumes:
      - application/json
      description: Admins can create new categories from the admin panel
      operationId: create-category
      parameters:
      - description: New category name
        in: body
        name: category_name
        required: true
        schema:
          $ref: '#/definitions/model.NewCategory'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
      summary: Create new product category
      tags:
      - product category
  /admin/login:
    post:
      consumes:
      - application/json
      description: Admin Login
      operationId: admin-login
      parameters:
      - description: Admin Login Credentials
        in: body
        name: admin_credentials
        required: true
        schema:
          $ref: '#/definitions/model.AdminLoginInfo'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin Login
      tags:
      - Admin
  /admin/logout:
    get:
      consumes:
      - application/json
      description: logout an logged-in admin from the site
      operationId: admin-logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin_Logout
      tags:
      - Admin
  /admin/users:
    get:
      consumes:
      - application/json
      description: The admin can list out all the registered users.
      operationId: list-all-users
      parameters:
      - description: Page number for pagination
        in: query
        name: page
        type: integer
      - description: Number of items to retrieve per page
        in: query
        name: limit
        type: integer
      - description: Search query string
        in: query
        name: query
        type: string
      - description: filter criteria for showing the users
        in: query
        name: filter
        type: string
      - description: sorting criteria for showing the users
        in: query
        name: sort_by
        type: string
      - description: sorting in descending order
        in: query
        name: sort_desc
        type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "204":
          description: No Content
          schema:
            $ref: '#/definitions/res.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin can list out all the registered users
      tags:
      - Admin
  /admin/users/:id/block:
    put:
      consumes:
      - application/json
      description: Admin can block a user
      operationId: block-user
      parameters:
      - description: ID of the user to be blocked
        in: body
        name: user_id
        required: true
        schema:
          $ref: '#/definitions/model.BlockUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin can block a registered user
      tags:
      - Admin
  /admin/users/{user_id}:
    get:
      consumes:
      - application/json
      description: Admin Fetch a specific user details by user id
      operationId: find-user-by-id
      parameters:
      - description: provide the ID of the user to be fetched
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin Fetch a specific user details by user id
      tags:
      - Admin
  /admin/users/unblock/{user_id}:
    put:
      consumes:
      - application/json
      description: Admin can unblock a blocked user
      operationId: unblock-user
      parameters:
      - description: ID of the user to be unblocked
        in: path
        name: user_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.Response'
      summary: Admin can unlock a blocked user
      tags:
      - Admin
  /user/home:
    get:
      consumes:
      - application/json
      description: user home
      operationId: user-home
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
      summary: User Home
      tags:
      - user
  /user/login/email:
    post:
      consumes:
      - application/json
      description: user Login
      operationId: user-login
      parameters:
      - description: user Login Credentials
        in: body
        name: user_credentials
        required: true
        schema:
          $ref: '#/definitions/req.UserLoginEmail'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
      summary: User Login
      tags:
      - user
  /user/logout:
    get:
      consumes:
      - application/json
      description: logout an logged-in user from the site
      operationId: user-logout
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/res.Response'
      summary: User_Logout
      tags:
      - user
  /user/signup:
    post:
      consumes:
      - application/json
      description: Create a new user with the specified details.
      operationId: Signup-user
      parameters:
      - description: New user Details
        in: body
        name: user_details
        required: true
        schema:
          $ref: '#/definitions/domain.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
      summary: api for Signup a new user
      tags:
      - Users Signup
  /user/signup/otp/verify:
    post:
      consumes:
      - application/json
      description: verify the otp of a user.
      operationId: Signup-otpverify-user
      parameters:
      - description: User details
        in: body
        name: otp
        required: true
        schema:
          $ref: '#/definitions/domain.Users'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/res.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/res.Response'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/res.Response'
      summary: signup otp verification
      tags:
      - Users otp verify
swagger: "2.0"
